@page "/dodawanie/{hodowlaID}"
@using PetHelp.Client.Nowy_folder
@using PetHelp.Shared.DTO
@using Microsoft.AspNetCore.Components.Forms
@inject HttpClient KlientHTTP
@inject NavigationManager Navigation
@inject StateManager _state;
@inject AuthenticationStateProvider GetAuthenticationStateAsync

@inject IJSRuntime JS

    <div class="box">
        <div class="row header">
            <div class="backButton" style="background-color:blue;">
                <input type="button" value="Back to list" @onclick="BackToLiat" />
            </div>
        </div>
        <div class="row content">
            <div class="" style="width:33.33%; background-color:green;  ">
             <!--   <span> IMAGE </span>
            <span> Zdjęcie zwierzęcia </span> -->
            <InputFile OnChange="@LoadFile" title="dodaj zdjecie"/>
            <img src="@ZwierzeImageUrl" />

            </div>
            <div class="" style="width:33.33%; background-color:red; ">
                Gatunek:
                <input class="btn btn-primary" type="text" @bind="nowyzwierzak.Gatunek" />

                Rasa:
                <select @bind="nowyzwierzak.rasaId">
                    @if (RasyPsow.Any())
                    {
                        @foreach (var rasa in RasyPsow)
                       {
                            <option value="@rasa.Id">@rasa.Nazwa</option>   
                       }
                    }
                </select>

                Imie:
                <input type="text" @bind="nowyzwierzak.Imie" />

                Umaszczenie:
                <input type="text" @bind="nowyzwierzak.Umaszczenie" />

                Data pomiaru waga:
                <input type="date" @bind="nowyzwierzak.Waga_Pomiar" />

                Waga:
                <input type="number" @bind="nowyzwierzak.Waga_Wartosc" />

                Data urodzenia:
                <input type="date" @bind="nowyzwierzak.DataUrodzenia" />

                Kastracja:
                <input type="checkbox" @bind="nowyzwierzak.Kastracja" />

                Info Dodatkowe:
                <input type="text" @bind="nowyzwierzak.Info_Dodatkowe" />

                Info Choroby:
                <input type="text" @bind="nowyzwierzak.Info_Choroby" />

                Info Schorzenia:
                <input type="text" @bind="nowyzwierzak.Info_Schorzenia" />

                Szczepienie Wscieklizna Data:
                <input type="date" @bind="nowyzwierzak.Szczepienie_Wscieklizna_Data" />

                Szczepienie Wscieklizna Status:
                <input type="checkbox" @bind="nowyzwierzak.Szczepienie_Wscieklizna_Status" />

                Szczepienie Wscieklizna NastepnyTermin:
                <input type="date" @bind="nowyzwierzak.Szczepienie_Wscieklizna_NastepnyTermin" />

            </div>
            <div class="" style="width:33.33%; background-color:green;  ">
               <!-- <span> IMAGE </span>
             <span> Zdjęcie zwierzęcia </span>-->
            </div>
        </div>
        <div class="row footer">
            <div class="backButton" style="background-color:blue; padding:5px;">
                <input class="confirmButton" type="button" value="Dodaj" @onclick="test" />
            </div>
        </div>
    </div>

<style>
    .box {
        display: flex;
        flex-flow: column;
        height: 100%;
    }

        .box .row {
            border: 1px dotted grey;
        }

            .box .row.header {
                flex: 0 1 auto;
                /* The above is shorthand for:
                          flex-grow: 0,
                          flex-shrink: 1,
                          flex-basis: auto
                          */
            }

            .box .row.content {
                flex: 1 1 auto;
            }

            .box .row.footer {
                flex: 0 1 40px;
            }
</style>





@code {
    [Parameter] public string hodowlaID { get; set; }
    private RasaDTO[] RasyPsow { get; set; } = Array.Empty<RasaDTO>();
    private List<IBrowserFile> loadedFiles = new(); //here
    private long maxFileSize = 5 * 1024 * 1024; ///here
    private int maxAllowedFiles = 1; //here
                                     //private string zdjecie = "";
                                     //private string mime = "";
    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine(_state);
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        this.CurrentUserId = authstate.User.Claims.First(x => x.Type == "sub").Value;

        //load rasy from api
        var response = await KlientHTTP.GetAsync("Common/Rasy/Pies");
        if (response.IsSuccessStatusCode)
        {
            // succesed call to api, fetd data or  if null, create empty list
            this.RasyPsow = await response.Content.ReadFromJsonAsync<RasaDTO[]>() ?? Array.Empty<RasaDTO>();
        }
    }

    private void BackToLiat()
    {
        Navigation.NavigateTo("/Home");
    }

    public ZwierzeDTO nowyzwierzak { get; set; } = new();

    public async Task test()
    {
        nowyzwierzak.WlascicielId = CurrentUserId;
        nowyzwierzak.HodowlaId = Convert.ToInt32(hodowlaID);
        var respond = await KlientHTTP.PostAsJsonAsync<ZwierzeDTO>($"Home/DodajZwierze", nowyzwierzak);
        //od tego
        if(!respond.IsSuccessStatusCode)
        {
            Console.WriteLine("Nie udało sie dodaź zwierzaka");
            return;
        }

        ZwierzeDTO? newZwierz = await respond.Content.ReadFromJsonAsync<ZwierzeDTO>();
        if(newZwierz is null)
        {
            Console.WriteLine("Niepowodzenie przy dodawaniu zwierzaka. Pusty obiekt!");
            return;
        }

        _state.Zwierzeta.Add(newZwierz);
        Navigation.NavigateTo("/home"); //??????
    }

    public string CurrentUserId { get; set; }

    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        nowyzwierzak.Zdjecie_MIME = e.File.ContentType;
        nowyzwierzak.Zdjecie_Name = e.File.Name;
        using var file = new StreamContent(e.File.OpenReadStream(maxFileSize));
        nowyzwierzak.Zdjecie_Data = await file.ReadAsByteArrayAsync();
    }

    string ZwierzeImageUrl
    {
        get
        {
            if (nowyzwierzak.Zdjecie_Data.Length == 0) return "/Images/No-Image.png";
            return $"data:{nowyzwierzak.Zdjecie_MIME};base64,{Convert.ToBase64String(nowyzwierzak.Zdjecie_Data)}";
        }
    }
}
