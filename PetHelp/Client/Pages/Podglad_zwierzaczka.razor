@page "/podglad/{ZwierzeId}"
@using Newtonsoft.Json
@using PetHelp.Client.Nowy_folder
@using PetHelp.Shared.DTO
@using System.Text.Json
@inject HttpClient KlientHTTP
@inject NavigationManager Navigation
@inject StateManager _state;

@inject IJSRuntime JS

<div class="profile">

        <!-- Top navbar -->
        <div class="profile-topnav">
            <input type="button" value="Back to list" @onclick="BackToLiat" />
        <h2>Detale zwierzaka: @zwierz.Imie</h2>
        </div>

        <div class="wrapper">
            <div class="profile-avatar">
            
                    @if (zmiana)
                        {
                <InputFile OnChange="@LoadFile" class="changer" title="Zmien zdjecie" style="position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%); z-index: 1;" />
                        }
            <img src="@ZwierzeImageUrl" @onmouseover="@OnMouseOver" @onmouseout="@OnMouseOut" />
                        
                    
            </div>

            <div class="profile-column">
                <div class="profile-box box-dane">
                    <div class="profile-box-title">
                        <h5>Dane podstawowe:</h5>
                    </div>
                    <div class="profile-box-body">
                        <article>
                            <div class="tabler">
                                <div class="rower">
                                    <div class="coler coler_w50">
                                        Gatunek
                                    </div>
                                    <div class="coler coler_w50">
                                    @if (IsChanged)
                                    {
                                        <input type="text" @bind="zwierz.Gatunek" />
                                    }
                                    else
                                        @zwierz.Gatunek

                                    </div>
                                </div>
                                <div class="rower">
                                    <div class="coler coler_w50">
                                        Rasa
                                    </div>
                                    <div class="coler coler_w50">
                                        @zwierz.rasaNazwa
                                    </div>
                                </div>
                                <div class="rower">
                                    <div class="coler coler_w50">
                                        Imię
                                    </div>
                                    <div class="coler coler_w50">
                                    @if (IsChanged)
                                    {
                                        <input type="text" @bind="zwierz.Imie" />
                                    }
                                    else
                                        @zwierz.Imie

                                    </div>
                                </div>
                                <div class="rower">
                                    <div class="coler coler_w50">
                                        Umaszczenie
                                    </div>
                                    <div class="coler coler_w50">
                                    @if (IsChanged)
                                    {
                                        <input type="text" @bind="zwierz.Umaszczenie" />
                                    }
                                    else
                                        @zwierz.Umaszczenie
                                    </div>
                                </div>                                
                                <div class="rower">
                                    <div class="coler coler_w25">
                                        Waga
                                    </div>
                                    <div class="coler subcol coler_w25">
                                        <div class="coler">
                                            Data pomiaru
                                        </div>
                                        <div class="coler">
                                            @if (IsChanged)
                                            {
                                                <input type="date" @bind="zwierz.Waga_Pomiar" />
                                            }
                                            else
                                            {
                                                @(zwierz.Waga_Pomiar.HasValue ? @zwierz.Waga_Pomiar.Value.ToShortDateString() : "Brak daty")
                                            }
                                        </div>
                                    </div>
                                    <div class="coler coler_w50">
                                       @if (IsChanged)
                                        {
                                            <input type="number" @bind="zwierz.Waga_Wartosc" />
                                        }
                                        else
                                            @zwierz.Waga_Wartosc

                                    </div>
                                </div>
                                <div class="rower">
                                    <div class="coler coler_w25">
                                        Wiek
                                    </div>
                                    <div class="coler subcol coler_w25">
                                        <div class="coler">
                                            Data urodzenia
                                        </div>
                                        <div class="coler">
                                        @if (IsChanged)
                                        {
                                            <input type="date" @bind="zwierz.DataUrodzenia" />
                                        }
                                        else
                                            @zwierz.DataUrodzenia.ToShortDateString()
                                    </div>
                                </div>
                                <div class="coler coler_w50">
                                        1 rok
                                    </div>
                                </div>
                                 <div class="rower">
                                    <div class="coler coler_w50">
                                        Kastracja
                                    </div>
                                    <div class="coler coler_w50">
                                        Kastracja:
                                    @if (IsChanged)
                                    {
                                        <input type="checkbox" @bind="zwierz.Kastracja" />
                                    }
                                    else
                                        @zwierz.Kastracja

                                    </div>
                                </div>
                            </div>
                        </article>
                    </div>
                </div>

                <div class="profile-box box-dodatkowe">
                    <div class="profile-box-title">
                        <h5>Info dodatkowe:</h5>
                    </div>
                    <div class="profile-box-body">
                        <article>
                        @if (IsChanged)
                        {
                            <textarea @bind="zwierz.Info_Dodatkowe" />
                        }
                        else
                            @zwierz.Info_Dodatkowe

                        </article>
                    </div>
                </div>
            </div>

            <div class="profile-column">
                
                <div class="profile-box box-choroby">
                    <div class="profile-box-title">
                        <h5>Dane chorobowe:</h5>
                    </div>
                    <div class="profile-box-body">
                        <h5>Przebyte choroby</h5>
                        <article>
                        @if (IsChanged)
                        {
                            <textarea @bind="zwierz.Info_Choroby" />
                        }
                        else
                            @zwierz.Info_Choroby


                        </article>
                        <h5>Aktualne Schorzenia</h5>
                        <article>
                        @if (IsChanged)
                        {
                            <textarea @bind="zwierz.Info_Schorzenia" />
                        }
                        else
                            @zwierz.Info_Schorzenia


                        </article>
                    </div>
                </div>

                <div class="profile-box box-szczepienia">
                    <div class="profile-box-title">
                        <h5>Szczepienia:</h5>
                    </div>
                    <div class="profile-box-body">
                        <article>
                            <div class="tabler">
                                <div class="rower">
                                    <div class="coler coler_w50">
                                        Data szczepienia
                                    </div>
                                    <div class="coler coler_w50">
                                    @if (IsChanged)
                                    {
                                        <input type="date" @bind="zwierz.Szczepienie_Wscieklizna_Data" />
                                    }
                                    else
                                        @(zwierz.Szczepienie_Wscieklizna_Data.HasValue ? zwierz.Szczepienie_Wscieklizna_Data.Value.ToShortDateString() : "Brak daty")

                                    </div>
                                </div>
                                <div class="rower">
                                    <div class="coler coler_w50">
                                        Czy zaszczepiony
                                    </div>
                                    <div class="coler coler_w50">
                                    @if (IsChanged)
                            {
                                <input type="checkbox" @bind="zwierz.Szczepienie_Wscieklizna_Status" />
                            }
                            else
                                @zwierz.Szczepienie_Wscieklizna_Status
                                    </div>
                                </div>
                                <div class="rower">
                                    <div class="coler coler_w50">
                                        Następny termin szczepienia
                                    </div>
                                    <div class="coler coler_w50">
                                    @if (IsChanged)
                                    {
                                        <input type="date" @bind="zwierz.Szczepienie_Wscieklizna_NastepnyTermin" />
                                    }
                                    else
                                        @(zwierz.Szczepienie_Wscieklizna_NastepnyTermin.HasValue ? @zwierz.Szczepienie_Wscieklizna_NastepnyTermin.Value.ToShortDateString() : "Brak daty")

                                    </div>
                                </div>
                            </div>
                        </article>
                    </div>
                </div>
            </div>
            </div>

        </div>
    
        <!-- bottom nav -->
        <div class="profile-bottomnav">
            <input type="button" value="Edycja" @onclick="()=> IsChanged=true">
            <input type="button" value="Zapisz" @onclick="Aktualizuj">
            <input type="button" value="cofnij zmiany" disabled="@(!IsChanged)" @onclick="UndoChanges">
        </div>

    @code {
    // Route parameter - distinguish what exactly Zwierze should we download from server by its key Id
    [Parameter] public string ZwierzeId { get; set; }
    // page loacl property for html binding and use in code
    private ZwierzeDTO zwierz { get; set; } = new();
    // property for keep track of current Zwierz state if its changed or no (used in undo-rever button)
    private bool IsChanged { get; set; } = false;
    private bool zmiana { get; set; } = false;
    // allow us to store response from server (allow to clone orginal-unchaged zwierze data, storing as a json format) populated on page initialisation
    private string _source_Json { get; set; }
    private long maxFileSize = 5 * 1024 * 1024;

    protected override async Task OnInitializedAsync()
    {
        // initial api call to our server to obtain ZwierzDTO data existing in database under Key corresponded to ZwierzeId
        var respond = await KlientHTTP.GetAsync($"Home/GetZwierzakDetails/{ZwierzeId}");
        // ensure if api call answer with succes code ( 200 OK )
        if (respond.IsSuccessStatusCode)
        {
            // store fetched full ZwierzDTO data into local property allows to render data inside html section
            zwierz = await respond.Content.ReadFromJsonAsync<ZwierzeDTO?>() ?? new();
            // store this respond in page local variableits allow us to fetch fresh 'unchaged' data
            // whenever its needed for example for reverting changes / undo button
            this._source_Json = await respond.Content.ReadAsStringAsync();
        }
    }
    private void BackToLiat()
    {
        // check if any changes occurs in this page
        if (IsChanged)
        {
            // find what index (if object exist, otherwise '-1') have current edited zwierzeDTO in cached list
            int index = _state.Zwierzeta.FindIndex(x => x.Id == zwierz.Id);
            //check if index (cached object type ZwierzDTO) exist in memory
            if (index > 0)
            {
                // overrite cached value with new edited one, its allow smooth rerender data
                //  and display info when use back to main page with his animals list,
                //  no additional page reload deeded
                _state.Zwierzeta[index] = zwierz;
            }
        }

        // back to main page 'home'
        Navigation.NavigateTo("/Home");
    }
    private async Task Aktualizuj()
    {

        // update zwierz data in database trough Post api call with updated data in body section
        await KlientHTTP.PostAsJsonAsync<ZwierzeDTO?>($"Home/AktualizujZwierze", zwierz);
        // data is changed, api is called, changed page state 'is changed' to true ( its turn ON undo button )
        ZwierzeDTO stary = _state.Zwierzeta.Where(x => x.Id == zwierz.Id).First();
        int index = _state.Zwierzeta.IndexOf(stary);
        _state.Zwierzeta[index] = zwierz;
        IsChanged = false;
        zmiana = false;
    }
    private async Task UndoChanges()
    {
        // deserialize orginal (unchanged) element and assign it again to page zwierz property
        this.zwierz = JsonConvert.DeserializeObject<ZwierzeDTO?>(_source_Json) ?? new();
        // send to server old version to revert changes
        var result = await KlientHTTP.PostAsJsonAsync<ZwierzeDTO?>($"Home/AktualizujZwierze", zwierz);
        // change this page state 'is changed' to false, data back to orginal from before any modifications
        IsChanged = false;
    }

    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        zwierz.Zdjecie_MIME = e.File.ContentType;
        zwierz.Zdjecie_Name = e.File.Name;
        using var file = new StreamContent(e.File.OpenReadStream(maxFileSize));
        zwierz.Zdjecie_Data = await file.ReadAsByteArrayAsync();
        zmiana = false;
        StateHasChanged();
    }

    string ZwierzeImageUrl
    {
        get
        {
            if (zwierz.Zdjecie_Data.Length == 0) return "/Images/No-Image.png";
            return $"data:{zwierz.Zdjecie_MIME};base64,{Convert.ToBase64String(zwierz.Zdjecie_Data)}";           
        }
    }

    private async Task OnMouseOver()
    {
        if(IsChanged)
            zmiana = true;
    }

    private async Task OnMouseOut()
    {


    }
}
