@page "/podglad/{ZwierzeId}"
@using Newtonsoft.Json
@using PetHelp.Client.Conponent
@using PetHelp.Client.States
@using PetHelp.Shared.DTO
@using System.Text.Json
@using System.Text
@inject HttpClient KlientHTTP
@inject NavigationManager Navigation
@inject StateManager _state;
@inject IJSRuntime JS

<div class="profile">
    <!-- Top navbar -->
    <div class="profile-topnav">
        <input type="button" value="Back to list" @onclick="BackToLiat" />
        <h2>Detale zwierzaka: @zwierz.Imie</h2>
    </div>
    <div class="wrapper">
    <div style="margin-left: 20px; height:100%; display:flex; flex-direction: column; justify-content: space-between;">
            <div class="profile-avatar">
                <img class="@(EditMode?"imgHoverUpload":"")" src="@ZwierzeImageUrl" @onclick="HandleClick" @onmouseout="@OnMouseOut" @onmouseover="@OnMouseOver" />
                @if (_IsHovering && EditMode)
                {
                    <img class="upload-image" src="svg/add-image-svgrepo-com.svg" alt="upload image" />
                }
                @if (EditMode)
                {
                    <InputFile id="uploadBtn1" OnChange="@LoadFile" style="display:none;" />
                }
            </div>
            <Kalendarz @ref="Kalendarz" PetID="zwierz.Id"/>
        </div>
        
        <div class="profile-column">
            <div class="profile-box box-dane">
                <div class="profile-box-title">
                    <h5>Dane podstawowe:</h5>
                </div>
                <div class="profile-box-body">
                    <article>
                        <div class="tabler">
                            <div class="rower">
                                <div class="coler coler_w50">
                                    Gatunek
                                </div>
                                <div class="coler coler_w50">
                                    @zwierz.Gatunek
                                </div>
                            </div>
                            <div class="rower">
                                <div class="coler coler_w50">
                                    Rasa
                                </div>
                                <div class="coler coler_w50">
                                    @zwierz.rasaNazwa
                                </div>
                            </div>
                            <div class="rower">
                                <div class="coler coler_w50">
                                    Imię
                                </div>
                                <div class="coler coler_w50">
                                    @if (EditMode)
                                    {
                                        <input type="text" @bind="zwierz.Imie" />
                                    }
                                    else
                                    {
                                        @zwierz.Imie
                                    }
                                </div>
                            </div>
                            <div class="rower">
                                <div class="coler coler_w50">
                                    Umaszczenie
                                </div>
                                <div class="coler coler_w50">
                                    @if (EditMode)
                                    {
                                        <input type="text" @bind="zwierz.Umaszczenie" />
                                    }
                                    else
                                    {
                                        @zwierz.Umaszczenie
                                    }
                                </div>
                            </div>
                            <div class="rower">
                                <div class="coler coler_w25">
                                    Waga
                                </div>
                                <div class="coler subcol coler_w25">
                                    <div class="coler">
                                        Data pomiaru
                                    </div>
                                    <div class="coler">
                                        @if (EditMode)
                                        {
                                            <input type="date" @bind="zwierz.Waga_Pomiar" />
                                        }
                                        else
                                        {
                                            @(zwierz.Waga_Pomiar.HasValue ? @zwierz.Waga_Pomiar.Value.ToShortDateString() : "Brak daty")
                                        }
                                    </div>
                                </div>
                                <div class="coler coler_w50">
                                    @if (EditMode)
                                    {
                                        <input type="number" @bind="zwierz.Waga_Wartosc" />
                                    }
                                    else
                                    {
                                        @zwierz.Waga_Wartosc
                                    }
                                </div>
                            </div>
                            <div class="rower">
                                <div class="coler coler_w25">
                                    Wiek
                                </div>
                                <div class="coler subcol coler_w25">
                                    <div class="coler">
                                        Data urodzenia
                                    </div>
                                    <div class="coler">
                                        @if (EditMode)
                                        {
                                            <input type="date" @bind="zwierz.DataUrodzenia" />
                                        }
                                        else
                                        {
                                            @zwierz.DataUrodzenia.ToShortDateString()
                                        }
                                    </div>
                                </div>
                                <div class="coler coler_w50">
                                    @GetFormattedAgeString(zwierz.DataUrodzenia)
                                </div>
                            </div>
                            <div class="rower">
                                <div class="coler coler_w50">
                                    Kastracja
                                </div>
                                <div class="coler coler_w50">
                                    Kastracja:
                                    @if (EditMode)
                                    {
                                        <input type="checkbox" @bind="zwierz.Kastracja" />
                                    }
                                    else
                                    {
                                        @zwierz.Kastracja
                                    }
                                </div>
                            </div>
                        </div>
                    </article>
                </div>
            </div>
            <div class="profile-box box-dodatkowe">
                <div class="profile-box-title">
                    <h5>Info dodatkowe:</h5>
                </div>
                <div class="profile-box-body">
                    <article>
                        @if (EditMode)
                        {
                            <textarea @bind="zwierz.Info_Dodatkowe" />
                        }
                        else
                        {
                            @zwierz.Info_Dodatkowe
                        }
                    </article>
                </div>
            </div>
        </div>
        <div class="profile-column">
            <div class="profile-box box-choroby">
                <div class="profile-box-title">
                    <h5>Dane chorobowe:</h5>
                </div>
                <div class="profile-box-body">
                    <h5>Przebyte choroby</h5>
                    <article>
                        @if (EditMode)
                        {
                            <textarea @bind="zwierz.Info_Choroby" />
                        }
                        else
                        {
                            @zwierz.Info_Choroby
                        }
                    </article>
                    <h5>Aktualne Schorzenia</h5>
                    <article>
                        @if (EditMode)
                        {
                            <textarea @bind="zwierz.Info_Schorzenia" />
                        }
                        else
                        {
                            @zwierz.Info_Schorzenia
                        }
                    </article>
                </div>
            </div>
            <div class="profile-box box-szczepienia">
                <div class="profile-box-title">
                    <h5>Szczepienia:</h5>
                </div>
                <div class="profile-box-body">
                    <article>
                        <div class="tabler">
                            <div class="rower">
                                <div class="coler coler_w50">
                                    Data szczepienia
                                </div>
                                <div class="coler coler_w50">
                                    @if (EditMode)
                                    {
                                        <input type="date" @bind="zwierz.Szczepienie_Wscieklizna_Data" />
                                    }
                                    else
                                    {
                                        @(zwierz.Szczepienie_Wscieklizna_Data.HasValue ? zwierz.Szczepienie_Wscieklizna_Data.Value.ToShortDateString() : "Brak daty")
                                    }
                                </div>
                            </div>
                            <div class="rower">
                                <div class="coler coler_w50">
                                    Czy zaszczepiony
                                </div>
                                <div class="coler coler_w50">
                                    @if (EditMode)
                                    {
                                        <input type="checkbox" @bind="zwierz.Szczepienie_Wscieklizna_Status" />
                                    }
                                    else
                                    {
                                        @zwierz.Szczepienie_Wscieklizna_Status
                                    }
                                </div>
                            </div>
                            <div class="rower">
                                <div class="coler coler_w50">
                                    Następny termin szczepienia
                                </div>
                                <div class="coler coler_w50">
                                    @if (EditMode)
                                    {
                                        <input type="date" @bind="zwierz.Szczepienie_Wscieklizna_NastepnyTermin" />
                                    }
                                    else
                                    {
                                        @(zwierz.Szczepienie_Wscieklizna_NastepnyTermin.HasValue ? @zwierz.Szczepienie_Wscieklizna_NastepnyTermin.Value.ToShortDateString() : "Brak daty")
                                    }
                                </div>
                            </div>
                        </div>
                    </article>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- bottom nav -->
<div class="profile-bottomnav">
    <input type="button" value="Edycja" @onclick="()=> EditMode=true">
    <input type="button" value="Zapisz" @onclick="Aktualizuj">
    <input type="button" value="cofnij zmiany" disabled="@(!EditMode)" @onclick="UndoChanges">
    <input type="button" value="Usuń" @onclick="Usun">
    <input type="button" value="Pobierz" @onclick="Pobierz">
</div>
@code {
    // Route parameter - distinguish what exactly Zwierze should we download from server by its key Id
    [Parameter] public string ZwierzeId { get; set; }
    // page loacl property for html binding and use in code
    private ZwierzeDTO zwierz { get; set; } = new();
    // property for keep track of current Zwierz state if its changed or no (used in undo-rever button)
    private bool EditMode { get; set; } = false;
    // allow us to store response from server (allow to clone orginal-unchaged zwierze data, storing as a json format) populated on page initialisation
    private string _source_Json { get; set; }
    private string dupa = "";
    private long maxFileSize = 5 * 1024 * 1024;
    private Kalendarz Kalendarz;
    string ZwierzeImageUrl
    
    {
        get
        {
            if (zwierz.Zdjecie_Data.Length == 0)
                return "/img/cat-placeholder.jpg";
            return $"data:{zwierz.Zdjecie_MIME};base64,{Convert.ToBase64String(zwierz.Zdjecie_Data)}";
        }
    }
    IJSObjectReference? module { get; set; }
    protected override async Task OnInitializedAsync()
    {
        // initial api call to our server to obtain ZwierzDTO data existing in database under Key corresponded to ZwierzeId
        var respond = await KlientHTTP.GetAsync($"Home/GetZwierzakDetails/{ZwierzeId}");
        // ensure if api call answer with succes code ( 200 OK )
        if (respond.IsSuccessStatusCode)
        {
            // store fetched full ZwierzDTO data into local property allows to render data inside html section
            zwierz = await respond.Content.ReadFromJsonAsync<ZwierzeDTO?>() ?? new();
            // store this respond in page local variableits allow us to fetch fresh 'unchaged' data
            // whenever its needed for example for reverting changes / undo button
            this._source_Json = await respond.Content.ReadAsStringAsync();
        }
    }
    private void BackToLiat()
    {
        // check if any changes occurs in this page
        if (EditMode)
        {
            // find what index (if object exist, otherwise '-1') have current edited zwierzeDTO in cached list
            int index = _state.Zwierzeta.FindIndex(x => x.Id == zwierz.Id);
            //check if index (cached object type ZwierzDTO) exist in memory
            if (index > 0)
            {
                // overrite cached value with new edited one, its allow smooth rerender data
                //  and display info when use back to main page with his animals list,
                //  no additional page reload deeded
                _state.Zwierzeta[index] = zwierz;
            }
        }
        _state.SelectedHodowlaId = zwierz.HodowlaId;
        // back to main page 'home'
        Navigation.NavigateTo("/Home");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                this.module = await JS.InvokeAsync
                <IJSObjectReference>
                ("import", "./Pages/Podglad_zwierzaczka.razor.js");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Failed to load JS module. Error: {ex}");
            }
        }
    }
    private async Task Aktualizuj()
    {
        // update zwierz data in database trough Post api call with updated data in body section
        await KlientHTTP.PostAsJsonAsync<ZwierzeDTO?>($"Home/AktualizujZwierze", zwierz);
        // data is changed, api is called, changed page state 'is changed' to true ( its turn ON undo button )
        ZwierzeDTO stary = _state.Zwierzeta.Where(x => x.Id == zwierz.Id).First();
        int index = _state.Zwierzeta.IndexOf(stary);
        _state.Zwierzeta[index] = zwierz;
        EditMode = false;
        EditMode = false;
    }
    private async Task UndoChanges()
    {
        // deserialize orginal (unchanged) element and assign it again to page zwierz property
        this.zwierz = JsonConvert.DeserializeObject<ZwierzeDTO?>(_source_Json) ?? new();
        // send to server old version to revert changes
        var result = await KlientHTTP.PostAsJsonAsync<ZwierzeDTO?>($"Home/AktualizujZwierze", zwierz);
        // change this page state 'is changed' to false, data back to orginal from before any modifications
        EditMode = false;
    }
    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        zwierz.Zdjecie_MIME = e.File.ContentType;
        zwierz.Zdjecie_Name = e.File.Name;
        using var file = new StreamContent(e.File.OpenReadStream(maxFileSize));
        zwierz.Zdjecie_Data = await file.ReadAsByteArrayAsync();
        EditMode = false;
        StateHasChanged();
    }
    private async Task Usun()
    {
        //wysłanie zapytanie do servera z miłą prośba o usuniecie zwierzątka <3 [*]
        await KlientHTTP.DeleteAsync($"/home/usun/{zwierz.Id}");
        //usunięcie stanu zwierzaka aby sienie pojawiał na strone => dalej jest w bazie
        _state.Zwierzeta.Remove(_state.Zwierzeta.Find(x => x.Id == zwierz.Id));
        Navigation.NavigateTo("/Home");
    }
    private async Task Pobierz()
    {
        string x = $"Imie: {zwierz.Imie} \nRasa: {zwierz.rasaNazwa} \nWiek: {GetFormattedAgeString(zwierz.DataUrodzenia)} \nWaga: {zwierz.Waga_Wartosc}\nKastracja: {zwierz.Kastracja}\nSzczepienie: {zwierz.Szczepienie_Wscieklizna_Status}\nInformacje dodatkowe: {zwierz.Info_Dodatkowe}";
        var wBytes = Encoding.UTF8.GetBytes(x);
        await JS.InvokeVoidAsync("saveAsFile", $"Export_{zwierz.Imie}.txt", Convert.ToBase64String(wBytes));
        //string y = (zwierz.Zdjecie_MIME.Split("/")[1]);
        //await JS.InvokeVoidAsync("saveAsFile", $"Export_Zwierzaczka.{y}", Convert.ToBase64String(zwierz.Zdjecie_Data));
    }
    bool _IsHovering = false;
    protected void OnMouseOver(MouseEventArgs mouseEvent)
    {
        if (!_IsHovering)
        {
            _IsHovering = true;
            StateHasChanged();
        }
    }
    protected void OnMouseOut(MouseEventArgs mouseEvent)
    {
        _IsHovering = false;
        StateHasChanged();
    }
    private async void HandleClick()
    {
        if (!EditMode) return;
        if (module is not null)
        {
            await this.module.InvokeVoidAsync("triggerButton", "uploadBtn1");
        }
    }
    public static string GetFormattedAgeString(DateTime _bDay, DateTime _day = default)
    {
        if (_day == default) _day = DateTime.Now;

        int? rok_int = null, miesiac_int = null, dzien_int = null;
        string? rok_string = null, miesiac_string = null, dzien_string = null;
        var difference = _day - _bDay;
        DateTime age = new DateTime().Add(difference);

        if (age.Year - 1 > 0)
        {
            rok_int = age.Year - 1;
            rok_string = rok_int switch
            {
                1 => "rok",
                > 1 and < 5 => "lata",
                > 5 => "lat",
                _ => null
            };
        }

        if (age.Month - 1 > 0)
        {
            miesiac_int = age.Month - 1;
            miesiac_string = miesiac_int switch
            {
                1 => "miesiąc",
                > 1 and < 5 => "miesiące",
                > 5 => "miesięcy",
                _ => null
            };
        }

        if (age.Day - 1 > 0)
        {
            dzien_int = age.Day - 1;
            dzien_string = dzien_int switch
            {
                1 => "dzień",
                > 1 => "dni",
                _ => null
            };
        }
        string output = String.Empty;
        output += $"{(rok_int.HasValue ? rok_int : "")} {rok_string ?? ""} ";
        output += $"{(miesiac_int.HasValue ? miesiac_int : "")} {miesiac_string ?? ""} ";
        if (rok_int.HasValue == false)
            output += $"{(dzien_int.HasValue ? dzien_int : "")} {dzien_string ?? ""} ";

        return output;
    }
}